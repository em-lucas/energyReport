{"ast":null,"code":"import { DonutChartMiddleComponent } from '../donut-chart-middle/donut-chart-middle.component';\nimport { DonutChartComponent } from '../donut-chart/donut-chart.component';\nimport { EnergyDirective } from '../energy.directive';\nimport { LineChildComponent } from '../line-child/line-child.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../energy.service\";\nimport * as i3 from \"../menu/menu.component\";\nimport * as i4 from \"../energy.directive\";\nimport * as i5 from \"../sidebar-right/sidebar-right.component\";\nconst _c0 = [\"mainDiv\"];\n\nfunction HomePageComponent_ng_template_4_Template(rf, ctx) {}\n\nexport let HomePageComponent = /*#__PURE__*/(() => {\n  class HomePageComponent {\n    constructor(renderer, http, energyService, cd) {\n      this.renderer = renderer;\n      this.http = http;\n      this.energyService = energyService;\n      this.cd = cd;\n      this.energyList = [];\n      this.theta = [];\n      this.numberCircle = 0;\n      this.widhtDiv = 200;\n    }\n\n    ngOnInit() {\n      this.energyList = this.energyService.getEnergyListAllItemsAvailable();\n      this.numberCircle = this.energyList.length;\n      this.changeEnergyList = this.energyService.energyListChanged.subscribe(energyUpdatedList => {\n        debugger;\n        this.energyList = energyUpdatedList;\n        this.numberCircle = this.energyList.length;\n        this.generateEnergyReport();\n      });\n    }\n\n    ngAfterViewInit() {\n      this.mainHeight = parseInt(window.getComputedStyle(this.main.nativeElement).height.slice(0, -2));\n      this.generateEnergyReport();\n      this.cd.detectChanges();\n    }\n\n    generateEnergyReport() {\n      this.resetDiv();\n      let frags = 360 / this.numberCircle;\n      if (this.energyList.length == 0) return;\n      this.theta.push({\n        id: 0,\n        value: frags / 180 * 0 * Math.PI,\n        borderA: -1,\n        borderB: -1\n      });\n      this.energyList.forEach((element, i) => {\n        this.theta.push({\n          id: element.index,\n          value: frags / 180 * (i + 1) * Math.PI,\n          borderA: -1,\n          borderB: -1\n        });\n      }); //find the limit of the angle \n\n      var border = (this.theta[0].value + this.theta[1].value) / 2; //fill the border A and B with the limit of the angle\n\n      for (var i = 0; i <= this.numberCircle; i++) {\n        var position = this.theta[i].value + border;\n        this.theta[i].borderA = position;\n        if (i !== this.numberCircle) this.theta[i + 1].borderB = position;else this.theta[0].borderA = -1;\n      }\n\n      this.theta.shift(); //this.theta.sort((a,b) => a.id < b.id ? 1 : -1).slice();\n\n      this.CreateCentralCircle();\n      this.CreateCircles();\n    } //creation of the middle circle\n\n\n    CreateCentralCircle() {\n      this.energyControlItem = {\n        width: 70,\n        height: 70,\n        top: this.mainHeight / 2,\n        left: this.mainHeight / 2\n      };\n      this.energyService.setCssVar(\"--widthDonutControl\", this.energyControlItem.width + 'px');\n      this.energyService.setCssVar(\"--heightDonutControl\", this.energyControlItem.height + 'px');\n      var style = `position: absolute; z-index: 1; top: ${this.energyControlItem.top}px; left: ${this.energyControlItem.left}px;`;\n      const viewContainerRef = this.energyHost.viewContainerRef;\n      const componentRef = viewContainerRef.createComponent(DonutChartMiddleComponent);\n      componentRef.instance.style = style;\n    } //create circles around the middle circle\n\n\n    CreateCircles() {\n      //var self = this;\n      let r = this.widhtDiv;\n      this.energyList.forEach((energyItem, i) => {\n        var theta = this.theta.find(f => f.id == energyItem.index);\n        const posx = Math.round(r * Math.cos(theta.value));\n        const posy = Math.round(r * Math.sin(theta.value));\n        energyItem.width = 85;\n        energyItem.height = 85;\n        energyItem.top = this.mainHeight / 2 - posy;\n        energyItem.left = this.mainHeight / 2 + posx;\n        var energyConfig = {\n          left: energyItem.left,\n          top: energyItem.top,\n          width: energyItem.width,\n          height: energyItem.height\n        };\n        this.energyService.setCssVar(\"--widthDonutChild\", energyItem.width + 'px');\n        this.energyService.setCssVar(\"--heightDonutChild\", energyItem.height + 'px');\n        var idElementSource = energyItem.index;\n        var mainDivStyle = `position: absolute;z-index: 1;top: ${energyItem.top}px;left: ${energyItem.left}px;`;\n        const viewContainerRef = this.energyHost.viewContainerRef;\n        const componentRef = viewContainerRef.createComponent(DonutChartComponent);\n        componentRef.instance.idElementSource = idElementSource;\n        componentRef.instance.mainDivStyle = mainDivStyle;\n        componentRef.instance.theta = this.theta;\n        componentRef.instance.widhtDiv = this.widhtDiv;\n        componentRef.instance.energyConfig = energyConfig;\n      });\n      Promise.resolve().then(() => {\n        this.generateLines();\n      });\n    }\n\n    generateLines() {\n      let donutControl = this.main.nativeElement.children[0];\n      this.energyList.forEach(sourceItem => {\n        this.connectLines(sourceItem, this.energyControlItem, 5);\n      });\n    }\n\n    connectLines(sourceItem, sourceControlItem, thickness) {\n      // position of the line in the child div\n      var x1 = sourceControlItem.left + sourceControlItem.width / 2;\n      var y1 = sourceControlItem.top + sourceControlItem.height / 2; // position of the line in the Middle div\n\n      var x2 = sourceItem.left + sourceItem.width / 2;\n      var y2 = sourceItem.top + sourceItem.height / 2; // distance\n\n      var length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)); // center\n\n      var cx = (x1 + x2) / 2 - length / 2;\n      var cy = (y1 + y2) / 2 - thickness / 2; // angle\n\n      var angle = Math.atan2(y1 - y2, x1 - x2) * (180 / Math.PI); //melhorar esse negocio aqui *************************\n\n      var style = \"padding:0px; margin:0px; height:\" + thickness + \"px; line-height:1px; position:absolute; left:\" + cx + \"px; top:\" + cy + \"px; width:\" + length + \"px; -moz-transform:rotate(\" + angle + \"deg); -webkit-transform:rotate(\" + angle + \"deg); -o-transform:rotate(\" + angle + \"deg); -ms-transform:rotate(\" + angle + \"deg); transform:rotate(\" + angle + \"deg);\";\n      const viewContainerRef = this.energyHost.viewContainerRef;\n      const componentRef = viewContainerRef.createComponent(LineChildComponent);\n      componentRef.instance.style = style;\n      componentRef.instance.sourceItem = sourceItem;\n      componentRef.instance.length = length;\n      componentRef.instance.parentDiv = true;\n    }\n\n    resetDiv() {\n      this.theta = [];\n      const viewContainerRef = this.energyHost.viewContainerRef;\n      viewContainerRef.clear();\n    }\n\n    ngOnDestroy() {\n      this.changeEnergyList.unsubscribe();\n    }\n\n  }\n\n  HomePageComponent.ɵfac = function HomePageComponent_Factory(t) {\n    return new (t || HomePageComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.HttpClientModule), i0.ɵɵdirectiveInject(i2.EnergyService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  HomePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomePageComponent,\n    selectors: [[\"app-home-page\"]],\n    viewQuery: function HomePageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(EnergyDirective, 7);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.energyHost = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.main = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"main\"], [\"mainDiv\", \"\"], [\"energyHost\", \"\"]],\n    template: function HomePageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"app-menu\");\n        i0.ɵɵelementStart(2, \"div\", 0, 1);\n        i0.ɵɵtemplate(4, HomePageComponent_ng_template_4_Template, 0, 0, \"ng-template\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"app-sidebar-right\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i3.MenuComponent, i4.EnergyDirective, i5.SidebarRightComponent],\n    styles: [\"div.main[_ngcontent-%COMP%]{height:300px;width:300px;position:absolute;margin:0 auto;transform:translate(-50%,-50%);top:50%;left:50%;border-radius:50%}\"]\n  });\n  return HomePageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}