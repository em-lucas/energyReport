{"ast":null,"code":"import { EnergyIntensity, EnergyStatus, ShapeLine } from 'src/app/energy.model';\nimport { LineConfig } from 'src/app/home-page/lineConfig.model';\nimport { LineGrandchildComponent } from './line-grandchild/line-grandchild.component';\nimport { LineDirective } from './line.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./line.directive\";\n\nfunction LineChildComponent_ng_template_1_Template(rf, ctx) {}\n\nexport let LineChildComponent = /*#__PURE__*/(() => {\n  class LineChildComponent {\n    constructor() {}\n\n    ngOnInit() {\n      this.setEnergyFlow(this.length, this.sourceItem, this.parentDiv);\n    }\n\n    setEnergyFlow(totalLengthDivParent, sourceItem, parentDiv) {\n      var lineConfig = this.getLineConfig(sourceItem, parentDiv);\n\n      if (sourceItem.status == EnergyStatus.sending) {\n        this.lineDirectionSendingEnergy(totalLengthDivParent, lineConfig);\n      } else if (sourceItem.status == EnergyStatus.consuming) {\n        this.lineDirectionConsumingEnergy(totalLengthDivParent, lineConfig);\n      }\n    }\n\n    getLineConfig(sourceItem, parentDiv) {\n      var lineConfig = new LineConfig(0, 0, 0, 0, 0);\n      var heightChildren = parentDiv ? 0 : 3;\n\n      switch (sourceItem.intensity) {\n        case EnergyIntensity.max:\n          lineConfig.width = 10;\n          lineConfig.height = 10;\n          lineConfig.margin = 3;\n          lineConfig.timer = 2;\n          break;\n\n        case EnergyIntensity.high:\n          lineConfig.width = 9;\n          lineConfig.height = 9;\n          lineConfig.margin = 3.2;\n          lineConfig.timer = 2.5;\n          break;\n\n        case EnergyIntensity.medium:\n          lineConfig.width = 8;\n          lineConfig.height = 8;\n          lineConfig.margin = 3.4;\n          lineConfig.timer = 3;\n          break;\n\n        case EnergyIntensity.low:\n          lineConfig.width = 7;\n          lineConfig.height = 7;\n          lineConfig.margin = 3.6;\n          lineConfig.timer = 3.5;\n          break;\n\n        case EnergyIntensity.min:\n          lineConfig.width = 6;\n          lineConfig.height = 6;\n          lineConfig.margin = 3.8;\n          lineConfig.timer = 4;\n          break;\n      } //define the shape of the line based on the json\n\n\n      switch (sourceItem.shapeLine) {\n        case ShapeLine.line:\n          lineConfig.shape = 15;\n          lineConfig.width = 20;\n          lineConfig.height = lineConfig.height - heightChildren;\n          lineConfig.margin = 0;\n          break;\n\n        case ShapeLine.round:\n          lineConfig.shape = 50;\n          break;\n\n        case ShapeLine.square:\n          lineConfig.shape = 10;\n          break;\n      }\n\n      return lineConfig;\n    }\n\n    lineDirectionSendingEnergy(length, lineConfig) {\n      var height = lineConfig.height;\n      var width = lineConfig.width;\n      var marginLeftRigh = lineConfig.margin;\n      var timer = lineConfig.timer + \"s\";\n      var borderRadius = lineConfig.shape;\n      var dotsNumber = Math.round(length / (width + marginLeftRigh * 2)); //  width + 6.4 margin\n\n      var dotsMiddle = Math.round(dotsNumber / 2);\n      var animationTime = 0; //Math.round(dotsNumber * 0.2);\n\n      var styleList = [];\n\n      for (let index = 0; index < dotsNumber; index++) {\n        var style = `height: ${height}px; width: ${width}px; margin: 0 ${marginLeftRigh}px; border-radius:${borderRadius}%;`;\n\n        switch (true) {\n          case index < dotsMiddle - 2:\n            style += ` animation: scalingSending ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle - 2:\n            style += ` animation: scalingSending30porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle - 1:\n            style += ` animation: scalingSending40porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle:\n            style += ` animation: scalingSending50porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle + 1:\n            style += ` animation: scalingSending50porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle + 2:\n            style += ` animation: scalingSending60porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index > dotsMiddle + 2:\n            style += ` animation: scalingSending70porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          default:\n            break;\n        }\n\n        style += \"animation-delay:\" + animationTime + \"s;\";\n        animationTime = animationTime + 0.2;\n        styleList.push(style);\n      }\n\n      const viewContainerRef = this.lineHost.viewContainerRef;\n      const componentRef = viewContainerRef.createComponent(LineGrandchildComponent);\n      componentRef.instance.id = \"sendingEnergy\";\n      componentRef.instance.class = \"sending\";\n      componentRef.instance.listStyle = styleList;\n    }\n\n    lineDirectionConsumingEnergy(length, lineConfig) {\n      var height = lineConfig.height;\n      var width = lineConfig.width;\n      var marginLeftRigh = lineConfig.margin;\n      var timer = lineConfig.timer + \"s\";\n      var borderRadius = lineConfig.shape;\n      var dotsNumber = Math.round(length / (width + marginLeftRigh * 2)); //  width + 6.4 margin\n\n      var dotsMiddle = Math.round(dotsNumber / 2);\n      var animationTime = Math.round(dotsNumber * 0.2); //0;\n\n      var styleList = [];\n\n      for (let index = 0; index < dotsNumber; index++) {\n        var style = `height: ${height}px; width: ${width}px; margin: 0 ${marginLeftRigh}px; border-radius:${borderRadius}%;`;\n\n        switch (true) {\n          case index < dotsMiddle - 2:\n            style += ` animation: scalingConsuming70porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle - 2:\n            style += ` animation: scalingConsuming60porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle - 1:\n            style += ` animation: scalingConsuming50porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle:\n            style += ` animation: scalingConsuming50porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle + 1:\n            style += ` animation: scalingConsuming40porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index == dotsMiddle + 2:\n            style += ` animation: scalingConsuming30porcent ${timer} ease-in-out infinite;`;\n            break;\n\n          case index > dotsMiddle + 2:\n            style += ` animation: scalingConsuming ${timer} ease-in-out infinite;`;\n            break;\n\n          default:\n            break;\n        }\n\n        style += \"animation-delay:\" + animationTime + \"s;\";\n        animationTime = animationTime - 0.2;\n        styleList.push(style);\n      }\n\n      const viewContainerRef = this.lineHost.viewContainerRef;\n      const componentRef = viewContainerRef.createComponent(LineGrandchildComponent);\n      componentRef.instance.id = \"consumingEnergy\";\n      componentRef.instance.class = \"consuming\";\n      componentRef.instance.listStyle = styleList;\n    }\n\n  }\n\n  LineChildComponent.ɵfac = function LineChildComponent_Factory(t) {\n    return new (t || LineChildComponent)();\n  };\n\n  LineChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LineChildComponent,\n    selectors: [[\"app-line-child\"]],\n    viewQuery: function LineChildComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(LineDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lineHost = _t.first);\n      }\n    },\n    inputs: {\n      style: \"style\",\n      sourceItem: \"sourceItem\",\n      length: \"length\",\n      parentDiv: \"parentDiv\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[1, \"line\"], [\"lineHost\", \"\"]],\n    template: function LineChildComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, LineChildComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.style);\n      }\n    },\n    directives: [i1.LineDirective],\n    styles: [\"div.line[_ngcontent-%COMP%]{border-radius:1rem}\"]\n  });\n  return LineChildComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}