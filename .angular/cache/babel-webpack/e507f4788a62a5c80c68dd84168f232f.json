{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/energy.service\";\nimport * as i2 from \"@angular/common\";\n\nconst _c0 = function (a0, a1) {\n  return {\n    fadeOut: a0,\n    fadeIn: a1\n  };\n};\n\nconst _c1 = function (a0, a1, a2) {\n  return {\n    fadeOut: a0,\n    fadeIn: a1,\n    \"d-none\": a2\n  };\n};\n\nexport let DonutChartChildComponent = /*#__PURE__*/(() => {\n  class DonutChartChildComponent {\n    constructor(document, energySercie) {\n      this.document = document;\n      this.energySercie = energySercie;\n      this.strokeDonutColor = \"#d9e021\";\n      this.svgSourceItem = \"/assets/image/baterry.png\"; // \"/assets/image/windmill.png\";  \n\n      this.strokePercentual = \"0 100\";\n      this.textDonutHideFirstTime = true;\n      this.fadeIn = false;\n    }\n\n    ngOnInit() {\n      this.energyItem = this.energySercie.getEnergyItemChildren(this.idElementSource, this.idElementSourceChild);\n      this.configSourceElement(this.energyItem.color, this.energyItem.imagePath);\n      var endNumber = 100 - this.energyItem.value;\n      this.porcentageNumber = this.energyItem.value;\n      this.secondValue = this.energyItem.secondValue;\n      var strokeEnd = `${this.energyItem.value} ${endNumber}`;\n      this.setNewValue(this.energyItem.index, \"0, 100\", strokeEnd);\n      this.interval = setInterval(() => {\n        this.textDonutHideFirstTime = false;\n        this.fadeIn = !this.fadeIn;\n      }, 6000);\n    }\n\n    configSourceElement(color, pathImage) {\n      this.color = color;\n      this.svgSourceItem = `/assets/image/${pathImage}`;\n    }\n\n    setNewValue(id, strokeStart, strokeEnd) {\n      this.style = \"\";\n      this.removeStyle(id);\n      var effectName = `donutEffect${id}`;\n      this.setStyleKeyFrame(id, effectName, strokeStart, strokeEnd);\n      setTimeout(() => {\n        this.style = `animation:  ${effectName} 2s;`;\n        this.strokePercentual = strokeEnd;\n      }, 1);\n    }\n\n    setStyleKeyFrame(id, effectName, strokeStart, strokeEnd) {\n      var styleFrame = document.createElement('style');\n      var keyFrames = `\n      @keyframes ${effectName} {\n        0% {\n            stroke-dasharray: ${strokeStart};\n        }\n        100% {\n            stroke-dasharray:  ${strokeEnd};\n        }\n      }\n      `;\n      styleFrame.innerHTML = keyFrames;\n      styleFrame.id = id;\n      document.getElementsByTagName('head')[0].appendChild(styleFrame);\n    }\n\n    removeStyle(id) {\n      var styles = document.getElementsByTagName('style');\n      var styleDelete;\n\n      for (var i = 0, max = styles.length; i < max; i++) {\n        if (styles[i].id == id) {\n          styleDelete = styles[i];\n        }\n      }\n\n      if (styleDelete) styleDelete.parentNode.removeChild(styleDelete);\n    }\n\n    ngOnDestroy() {\n      clearInterval(this.interval);\n    }\n\n  }\n\n  DonutChartChildComponent.ɵfac = function DonutChartChildComponent_Factory(t) {\n    return new (t || DonutChartChildComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.EnergyService));\n  };\n\n  DonutChartChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DonutChartChildComponent,\n    selectors: [[\"app-donut-chart-child\"]],\n    inputs: {\n      mainDivStyle: \"mainDivStyle\",\n      idElementSource: \"idElementSource\",\n      idElementSourceChild: \"idElementSourceChild\"\n    },\n    decls: 14,\n    vars: 21,\n    consts: [[1, \"circle\"], [1, \"children\"], [\"width\", \"100%\", \"height\", \"100%\", \"viewBox\", \"0 0 40 40\", 1, \"donut\"], [\"cx\", \"20\", \"cy\", \"20\", \"r\", \"15.91549430918954\", \"fill\", \"#fff\", 1, \"donut-hole\"], [\"cx\", \"20\", \"cy\", \"20\", \"r\", \"15.91549430918954\", \"fill\", \"transparent\", \"stroke\", \"#e2e4e5\", \"stroke-width\", \"3.5\", 1, \"donut-ring\"], [\"cx\", \"20\", \"cy\", \"20\", \"r\", \"15.91549430918954\", \"fill\", \"transparent\", \"stroke-width\", \"3.5\", \"stroke-dashoffset\", \"25\", 1, \"donut-segment\"], [\"height\", \"20\", \"width\", \"20\", \"x\", \"0%\", \"y\", \"0%\", 3, \"ngClass\"], [1, \"donut-text\", 3, \"ngClass\"], [\"y\", \"25%\", \"transform\", \"translate(0, 2)\"], [\"x\", \"25%\", \"text-anchor\", \"middle\", 1, \"donut-percent\"], [\"y\", \"40%\", \"transform\", \"translate(0, 2)\"], [\"x\", \"25%\", \"text-anchor\", \"middle\", 1, \"donut-data\"]],\n    template: function DonutChartChildComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(2, \"svg\", 2);\n        i0.ɵɵelement(3, \"circle\", 3);\n        i0.ɵɵelement(4, \"circle\", 4);\n        i0.ɵɵelement(5, \"circle\", 5);\n        i0.ɵɵelement(6, \"image\", 6);\n        i0.ɵɵelementStart(7, \"g\", 7);\n        i0.ɵɵelementStart(8, \"text\", 8);\n        i0.ɵɵelementStart(9, \"tspan\", 9);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"text\", 10);\n        i0.ɵɵelementStart(12, \"tspan\", 11);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.mainDivStyle);\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleMap(ctx.style);\n        i0.ɵɵstyleProp(\"stroke\", ctx.color);\n        i0.ɵɵattribute(\"stroke-dasharray\", ctx.strokePercentual);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(14, _c0, ctx.fadeIn, !ctx.fadeIn));\n        i0.ɵɵattribute(\"href\", ctx.svgSourceItem);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"fill\", ctx.color);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(17, _c1, !ctx.fadeIn, ctx.fadeIn, ctx.textDonutHideFirstTime));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.porcentageNumber);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.secondValue);\n      }\n    },\n    directives: [i2.NgClass],\n    styles: [\"div.circle[_ngcontent-%COMP%]{position:absolute;background-color:transparent}div.circle[_ngcontent-%COMP%]   div.children[_ngcontent-%COMP%]{position:relative;width:var(--widthDonutGrandchild, 100);height:var(--heightDonutGrandchild, 100)}div.circle[_ngcontent-%COMP%]   .svg-item[_ngcontent-%COMP%]{width:100%;font-size:16px;margin:0 auto;animation:donutfade 1s}@keyframes donutfade{0%{opacity:.2}to{opacity:1}}@media (min-width: 992px){.svg-item[_ngcontent-%COMP%]{width:80%}}@keyframes donutfadelong{0%{opacity:0}to{opacity:1}}.donut-text[_ngcontent-%COMP%]{font-family:Arial,Helvetica,sans-serif;opacity:0}.donut-label[_ngcontent-%COMP%]{font-size:.28em;font-weight:700;line-height:1;fill:#000;transform:translateY(.25em)}.donut-percent[_ngcontent-%COMP%]{font-size:.75em;line-height:1;transform:translateY(.5em);font-weight:bold}.donut-data[_ngcontent-%COMP%]{font-size:.18em;line-height:1;transform:translateY(.5em);text-align:center;text-anchor:middle;color:#666;fill:#666;animation:donutfadelong 1s}.fadeOut[_ngcontent-%COMP%]{opacity:1;animation-name:diagonal-slide;animation-duration:.05s;animation-iteration-count:10;animation-fill-mode:forwards}@keyframes diagonal-slide{0%{transform:scale(1) translate(25%,25%);animation-timing-function:linear}to{transform:scale(1) translate(24%,26%);animation-timing-function:linear;opacity:0}}.fadeIn[_ngcontent-%COMP%]{opacity:1;animation-name:fadeInOpacity;animation-iteration-count:1;animation-timing-function:ease-in;animation-duration:2s;transform:scale(1) translate(25%,25%)}@keyframes fadeInOpacity{0%{opacity:0}to{opacity:1}}\"]\n  });\n  return DonutChartChildComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}