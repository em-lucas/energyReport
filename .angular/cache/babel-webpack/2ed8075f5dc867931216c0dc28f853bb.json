{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/energy.service\";\nexport let DonutChartChildComponent = /*#__PURE__*/(() => {\n  class DonutChartChildComponent {\n    constructor(document, energyService, _ngZone) {\n      this.document = document;\n      this.energyService = energyService;\n      this._ngZone = _ngZone;\n      this.strokeDonutColor = \"#d9e021\";\n      this.svgSourceItem = \"./assets/image/baterry.png\"; // \"/assets/image/windmill.png\";  \n\n      this.strokePercentual = \"0 100\";\n      this.textDonutHideFirstTime = true;\n      this.fadeIn = false;\n    }\n\n    ngOnInit() {\n      this.changeEnergyItem = this.energyService.energyItemChanged.subscribe(newEnergyItem => {\n        if (this.idElementSource == newEnergyItem.index) {\n          var newElementChild = Math.floor(newEnergyItem.value / newEnergyItem.childrenSource.length);\n          var endNumber = 100 - newElementChild;\n          this.porcentageNumber = newElementChild;\n          this.secondValue = newEnergyItem.secondValue;\n          var strokeEnd = `${newElementChild} ${endNumber}`;\n          this.setNewValue('' + this.idElementSourceChild, this.strokePercentual, strokeEnd);\n        }\n      });\n      this.energyItem = this.energyService.getEnergyItemChildren(this.idElementSource, this.idElementSourceChild);\n      this.configSourceElement(this.energyItem.color, this.energyItem.imagePath);\n      var endNumber = 100 - this.energyItem.value;\n      this.porcentageNumber = this.energyItem.value;\n      this.secondValue = this.energyItem.secondValue;\n      var strokeEnd = `${this.energyItem.value} ${endNumber}`;\n      this.setNewValue(this.energyItem.index, \"0, 100\", strokeEnd);\n\n      this._ngZone.runOutsideAngular(() => {\n        this.interval = setInterval(() => {\n          this._ngZone.run(() => {\n            this.textDonutHideFirstTime = false;\n            this.fadeIn = !this.fadeIn;\n          });\n        }, 10000);\n      });\n    }\n\n    configSourceElement(color, pathImage) {\n      this.color = color;\n      this.svgSourceItem = `./assets/image/${pathImage}`;\n    }\n\n    setNewValue(id, strokeStart, strokeEnd) {\n      this.style = \"\";\n      this.removeStyle(id);\n      var effectName = `donutEffect${id}`;\n      this.setStyleKeyFrame(id, effectName, strokeStart, strokeEnd);\n\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this._ngZone.run(() => {\n            this.style = `animation:  ${effectName} 2s;`;\n            this.strokePercentual = strokeEnd;\n          });\n        }, 1000);\n      });\n    }\n\n    setStyleKeyFrame(id, effectName, strokeStart, strokeEnd) {\n      var styleFrame = document.createElement('style');\n      var keyFrames = `\n      @keyframes ${effectName} {\n        0% {\n            stroke-dasharray: ${strokeStart};\n        }\n        100% {\n            stroke-dasharray:  ${strokeEnd};\n        }\n      }\n      `;\n      styleFrame.innerHTML = keyFrames;\n      styleFrame.id = id;\n      document.getElementsByTagName('head')[0].appendChild(styleFrame);\n    }\n\n    removeStyle(id) {\n      var styles = document.getElementsByTagName('style');\n      var styleDelete;\n\n      for (var i = 0, max = styles.length; i < max; i++) {\n        if (styles[i].id == id) {\n          styleDelete = styles[i];\n        }\n      }\n\n      if (styleDelete) styleDelete.parentNode.removeChild(styleDelete);\n    }\n\n    ngOnDestroy() {\n      clearInterval(this.interval);\n      this.changeEnergyItem.unsubscribe();\n    }\n\n  }\n\n  DonutChartChildComponent.ɵfac = function DonutChartChildComponent_Factory(t) {\n    return new (t || DonutChartChildComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.EnergyService), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  DonutChartChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DonutChartChildComponent,\n    selectors: [[\"app-donut-chart-child\"]],\n    inputs: {\n      mainDivStyle: \"mainDivStyle\",\n      idElementSource: \"idElementSource\",\n      idElementSourceChild: \"idElementSourceChild\"\n    },\n    decls: 13,\n    vars: 11,\n    consts: [[1, \"circle\"], [1, \"children\"], [\"width\", \"100%\", \"height\", \"100%\", \"viewBox\", \"0 0 40 40\", 1, \"donut\"], [\"cx\", \"20\", \"cy\", \"20\", \"r\", \"15.91549430918954\", \"fill\", \"#fff\", 1, \"donut-hole\"], [\"cx\", \"20\", \"cy\", \"20\", \"r\", \"15.91549430918954\", \"fill\", \"transparent\", \"stroke\", \"#e2e4e5\", \"stroke-width\", \"3.5\", 1, \"donut-ring\"], [\"cx\", \"20\", \"cy\", \"20\", \"r\", \"15.91549430918954\", \"fill\", \"transparent\", \"stroke-width\", \"3.5\", \"stroke-dashoffset\", \"25\", 1, \"donut-segment\"], [1, \"donut-text\"], [\"y\", \"25%\", \"transform\", \"translate(0, 2)\"], [\"x\", \"25%\", \"text-anchor\", \"middle\", 1, \"donut-percent\"], [\"y\", \"40%\", \"transform\", \"translate(0, 2)\"], [\"x\", \"25%\", \"text-anchor\", \"middle\", 1, \"donut-data\"]],\n    template: function DonutChartChildComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(2, \"svg\", 2);\n        i0.ɵɵelement(3, \"circle\", 3);\n        i0.ɵɵelement(4, \"circle\", 4);\n        i0.ɵɵelement(5, \"circle\", 5);\n        i0.ɵɵelementStart(6, \"g\", 6);\n        i0.ɵɵelementStart(7, \"text\", 7);\n        i0.ɵɵelementStart(8, \"tspan\", 8);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"text\", 9);\n        i0.ɵɵelementStart(11, \"tspan\", 10);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.mainDivStyle);\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleMap(ctx.style);\n        i0.ɵɵstyleProp(\"stroke\", ctx.color);\n        i0.ɵɵattribute(\"stroke-dasharray\", ctx.strokePercentual);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"fill\", ctx.color);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.porcentageNumber);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.secondValue);\n      }\n    },\n    styles: [\"div.circle[_ngcontent-%COMP%]{position:absolute;background-color:transparent}div.circle[_ngcontent-%COMP%]   div.children[_ngcontent-%COMP%]{position:relative;width:var(--widthDonutGrandchild, 100);height:var(--heightDonutGrandchild, 100)}div.circle[_ngcontent-%COMP%]   .svg-item[_ngcontent-%COMP%]{width:100%;font-size:16px;margin:0 auto;animation:donutfade 1s}@keyframes donutfade{0%{opacity:.2}to{opacity:1}}@media (min-width: 992px){.svg-item[_ngcontent-%COMP%]{width:80%}}@keyframes donutfadelong{0%{opacity:0}to{opacity:1}}.donut-text[_ngcontent-%COMP%]{font-family:Arial,Helvetica,sans-serif;transform:scale(1) translate(25%,25%)}.donut-label[_ngcontent-%COMP%]{font-size:.28em;font-weight:700;line-height:1;fill:#000;transform:translateY(.25em)}.donut-percent[_ngcontent-%COMP%]{font-size:.75em;line-height:1;transform:translateY(.5em);font-weight:bold}.donut-data[_ngcontent-%COMP%]{font-size:.18em;line-height:1;transform:translateY(.5em);text-align:center;text-anchor:middle;color:#666;fill:#666;animation:donutfadelong 1s}\"]\n  });\n  return DonutChartChildComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}